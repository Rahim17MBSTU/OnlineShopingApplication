@model IEnumerable<Products>
@{
    ViewData["Title"] = "Index";
}
<br />
<br />
<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="text-info">Products List</h2>
    <a asp-action="Create" class="btn btn-info">
        <i class="fa-solid fa-plus"></i> Create Product
    </a>
</div>

<form method="get" asp-action="Index">
    <div class="row align-items-end">

        <!-- Low and High Amount Filter -->
        <div class="col-md-2">
            <input type="text" class="form-control" value="@ViewBag.LowAmount" name="lowAmount" placeholder="Low Amount" />
        </div>
        <div class="col-md-2">
            <input type="text" class="form-control" value="@ViewBag.HighAmount" name="highAmount" placeholder="High Amount" />
        </div>
        <div class="col-md-2">
            <button type="submit" name="filterType" value="amount" class="btn btn-outline-success w-50">Search</button>
        </div>

        <!-- Search by Name -->
        <div class="col-md-3">
            <input type="text" name="searchString" value="@ViewBag.SearchString" class="form-control" placeholder="Search by any Field..." />
        </div>
        <div class="col-md-2">
            <button type="submit" name="filterType" value="name" class="btn btn-success w-100">Search</button>
        </div>

        <!-- Clear Button -->
        <div class="col-md-1 mt-2">
            <a asp-action="Index" class="btn btn-secondary w-100 ">Clear</a>
        </div>
    </div>
</form>


<br />

<form method="get" asp-controller="Product" asp-action="Index" class="form-inline mb-3">
    <label for="pageSize" class="form-label">Items per page:</label>

        @{
            int pageSize = ViewBag.PageSize ?? 5;
        }

    <select name="pageSize" onchange="this.form.submit()">
        <option value="5" selected="@(pageSize == 5 ? "selected" : null)">5</option>
        <option value="10" selected="@(pageSize == 10 ? "selected" : null)">10</option>
        <option value="20" selected="@(pageSize == 20 ? "selected" : null)">20</option>
        <option value="50" selected="@(pageSize == 50 ? "selected" : null)">50</option>
        <option value="100" selected="@(pageSize == 100 ? "selected" : null)">100</option>

    </select>


    <!-- Hidden fields to persist existing search/filter/sort values -->
    <input type="hidden" name="searchString" value="@ViewBag.SearchString" />
    <input type="hidden" name="lowAmount" value="@ViewBag.LowAmount" />
    <input type="hidden" name="highAmount" value="@ViewBag.HighAmount" />
    <input type="hidden" name="sortOrder" value="@ViewData["SortOrder"]" />
</form>


<table id="myTable" class="table table-bordered table-dark" style="width: 100%">
    <thead class="thead-dark">
        <tr class="table-info">
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSortParam">@Html.DisplayNameFor(model => model.Name)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PriceSortParam"> @Html.DisplayNameFor(model => model.Price)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ProductColorSortParam">@Html.DisplayNameFor(model => model.ProductColor)</a>
            
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.AvailableSortParam"> @Html.DisplayNameFor(model => model.IsAvailable)</a>
                
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.StockSortParam"> @Html.DisplayNameFor(model => model.StockQuantity)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSortParam"> @Html.DisplayNameFor(model => model.DateAdded) </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ProductTypeSortParam"> @Html.DisplayNameFor(model => model.ProductTypesId) </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.SpecialTagSortParam">@Html.DisplayNameFor(model => model.SpecialTagsId)</a>
            </th>
            <th class="text-center">
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach(var product in Model)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Price</td>
                <td>@product.ProductColor</td>
                <td>@product.IsAvailable</td>
                <td>@product.StockQuantity</td>
                <td>@product.DateAdded</td>
                <td>@product.ProductTypes.ProductType</td>
                <td>@product.SpecialTags.SpecialTagName</td>

                <partial name="_ButtonPartialView" model="@product.Id" />

            </tr>
        }

    </tbody>
</table>


@if (ViewBag.TotalItems > ViewBag.PageSize)
{
    int totalPages = (int)Math.Ceiling((double)ViewBag.TotalItems / ViewBag.PageSize);
    int currentPage = ViewBag.PageNumber;

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <!-- Previous -->
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(currentPage - 1)"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-searchString="@ViewBag.SearchString"
                       asp-route-lowAmount="@ViewBag.LowAmount"
                       asp-route-highAmount="@ViewBag.HighAmount"
                       asp-route-sortOrder="@ViewData["SortOrder"]">
                        Previous
                    </a>
                </li>
            }

            <!-- Page Numbers -->
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@i"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-searchString="@ViewBag.SearchString"
                       asp-route-lowAmount="@ViewBag.LowAmount"
                       asp-route-highAmount="@ViewBag.HighAmount"
                       asp-route-sortOrder="@ViewData["SortOrder"]">
                        @i
                    </a>
                </li>
            }

            <!-- Next -->
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-pageNumber="@(currentPage + 1)"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-searchString="@ViewBag.SearchString"
                       asp-route-lowAmount="@ViewBag.LowAmount"
                       asp-route-highAmount="@ViewBag.HighAmount"
                       asp-route-sortOrder="@ViewData["SortOrder"]">
                        Next
                    </a>
                </li>
            }

        </ul>
    </nav>
}



@section Scripts {
    <script src="https://kit.fontawesome.com/your-kit-code.js" crossorigin="anonymous"></script>
    <!-- JavaScript -->
    <script src="//cdn.jsdelivr.net/npm/alertifyjs@1.14.0/build/alertify.min.js"></script>
    <script>
                $(document).ready(function () {
            $('#myTable').DataTable({
                searching: false,
                paging: false,
                ordering: false,
                info: false,
                dom: 'Bfrtip',
                buttons: [
                    { extend: 'copyHtml5',  exportOptions: { columns: ':not(:last-child)' } },
                    { extend: 'csvHtml5',   exportOptions: { columns: ':not(:last-child)' } },
                    { extend: 'excelHtml5', exportOptions: { columns: ':not(:last-child)' } },
                    { extend: 'pdfHtml5',   exportOptions: { columns: ':not(:last-child)' } },
                    { extend: 'print',      exportOptions: { columns: ':not(:last-child)' } }
                ]
            });
        });
    </script>
    
    <script type="text/javascript">
        
        $(function() {
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                alertify.set('notifier', 'position', 'top-right');
                alertify.success('@Html.Raw(TempData["SuccessMessage"])');
                @{
                    // Clear immediately after display
                    TempData.Remove("SuccessMessage");
                }
            </text>
        }
        @if (TempData["DeleteSuccessMessage"] != null)
        {
            <text>
                alertify.set('notifier','position','top-right');
                alertify.error('@Html.Raw(TempData["DeleteSuccessMessage"])');
                @TempData.Remove("DeleteSuccessMessage");
            </text>
        }
        });
    </script>
}